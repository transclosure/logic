"Timestamp","After running `playerOneStrategyBuggyAllowsSquareStart` and looking at the UNSAT core highlighting, why do you think the first board cannot be square?","Describe how you would edit your definitions to fix 'PlayerOneStrategyBuggy' so that square boards are not impossible. ","Please order the following facts highlighted in the UNSAT core you saw earlier from most relevant to least relevant to the problem. **You can omit facts you are unsure about.**"
"2017/02/28 6:29:19 PM EST","Player One has to go first, the board can never go from square to square, so Player One would have to return a rectangle, which we disallow","let player two go first","C/D, E, F, H"
"2017/02/28 6:32:16 PM EST","I think it's because it's impossible to satisfy the choiced constraints since one of them has to be changed but the other one has to be the same so you will by definition get a rectangle","Change the all to some?","C, D, A"
"2017/02/28 6:33:08 PM EST","Because you can't only remove rows or cols from a square to make another square","Only have player one give a square if the first board is not a square","H, C, D, G, F, E, A, B"
"2017/02/28 6:36:00 PM EST","Unclear - the one useful piece of information is that it catches the buggy strategy as a potential reason for unsatisifibility, but other than that it doesn't really give any helpful indication as to why the first board cannot be square ","Add something else, which says that says disregard cases where the board was not square to begin with (i.e. only in cases where the pre-move board had an unequal number of rows and columns would you have to enforce that the after-board had an equal number of rows and columns if player 1 just moved)","H, G, F, E, C, D,A,B, F"
"2017/02/28 6:36:12 PM EST","If the first board is square, and player one must remove either some number of rows or some number of cols, the board after player one's move will inherently be not square.","Either:
a) Player one's buggy strategy must allow player one to make a move that returns in a rectangular board (perhaps there are some winning strategies there after all?) 
b) The game rules must allow a move to map a square board to another square board. This could happen if a player is allowed to remove 0 rows/cols or if a player is allowed to remove the same number of rows and cols in one move.","H, G, C, D, E, F, A, B"
"2017/02/28 6:47:22 PM EST","Because if PlayerOne starts and the board is square then PlayerOne can not give PlayerTwo a square board because you cannot remove both rows and cols or skip your turn.","I would just add an implies statement. Thus, PlayerTwo would only return a square board if  the board PlayerTwo was given was not square. Otherwise PlayerTwo could return whatever board they please.","F, G, C, D"
"2017/02/28 6:47:51 PM EST","Because PlayerOne always starts and our PlayerOneStrategyBuggy pred ensures that whenever it's Player One's turn then the board must be square.","Exclude the first move from the quantification to ensure that no first square boards are impossible","H, G, E, F, D, C, B, A"
"2017/02/28 6:52:52 PM EST","I think it's the combination of the restriction that player One always returns a square board (""move.after.rows = move.after.cols"") and the restriction that player One is always the first player (""first.player = One"").","Add the condition ""move.before.rows = move.before.cols"" to the condition in PlayerOneStrategyBuggy with an ""or"". That way, Player One will always return a square board unless they start with a square board at the beginning of their turn.","G, E, H, C, D, B"
"2017/02/28 6:58:04 PM EST","Because the first player has to make a move and the first player's strategy is to create square boards, square starting boards are not possible.","Something would need to be added to allow for a starting square board case.","C & D, F, E, G, H, A & B"
"2017/02/28 6:59:09 PM EST","if the first player's strategy is to make a square board, and they are initially given a square board, they can't break off the board in such a way to create another square. (If given a square, they will make a rectangle, which isn't allowed --> first board cannot be square)","need to special case when m.before.rows = m.before.cols","C D H G A E B F"
"2017/02/28 7:00:07 PM EST","Because then it is impossible to satisfy the condition in the buggy strategy.","I would make it similar to the one I implemented for the lab, in which there is a condition that the before board is not square, which implies that the after board is.","G,H,C,D,E,FA,B "
"2017/02/28 7:08:26 PM EST","Because in order to get to a square board I need a previous rectangular board, meaning I can't start with a square board.","I would add the check in move.before.player is One the fact that move.before.before.board should have an unequal number of rows and cols. ","H, G, (the others weren't particularly helpful to me)"
"2017/02/28 7:13:35 PM EST","Because move forces the player to choose a number of rows/columns that is not greater than or equal to the current number of rows/columns, dependent on what is being chosen. ","Add condition that if number of rows/cols are equal, remove either one row or one column. It's impossible to win, however, unless the other player makes a mistake. ","H, G, C, D, F, E, B, A"
"2017/02/28 7:14:56 PM EST","the predicate requires the board to be square after a move, so it can't be square beforehand","use an implies: player 1's move AND a non-square board implies a square board after the move.","HGEFCDAB"
"2017/03/01 2:38:59 AM EST","The first board is the result of player one removing a row or a column in their first turn, which means that the board after player one does the removal is no longer a square, but a rectangle.","We can says that the absolute value of the difference between the first.rows and the first.cols values has to be exactly 1","H, G, F, E, D, C, B, A"
"2017/03/01 2:39:03 AM EST","If we want the the player 1 to end up with a square after their first move, the original board cannot be a square. Consider a square board: on the first move the player would have to remove either a row or a column. If either is removed (and not both), the board would have to be a non-square.","We change the first square such that the difference between the rows and cols are 1.","H, G, (F, E, D, C, B, A)"
"2017/03/01 11:35:07 AM EST","The first board cannot be square because player one moves first and we've required that after player one's move, the number of rows and columns be equal.","Player 1 should try to make their move result in a square board, but if it cannot, should pick a random move.","most important to least: H, G, E"
"2017/03/01 6:11:05 PM EST","The number chosen has to be less than the current board sz. If it's already square this is not possible.","Make it conditional so that only true if input board is not square","GHFCDABE"
"2017/03/01 6:19:00 PM EST","You have to pick a row or col smaller than the current dimensions, and can't start with an empty/zero-sized board, so player1 cannot follow the strategy of creating a square board","Have Player1 follow this strategy when possible (when there is not a square board)","C, D, G, A, H, B, F, E"
"2017/03/01 6:22:34 PM EST","Because after player one goes, the board must be square, but players are not allowed to remove nothing (by def of a move). Therefore, the player cannot start on a square board.","Instead of all moves, only execute the strategy if it is possible (before.rows != before.cols implies after.rows = after.cols).","G C D E H F A B"
"2017/03/01 6:26:55 PM EST","Player one always starts first and the strategy implies that any board for which it is the turn of player one the board must *not* be square so that they can make it square.","Special case the first board.","H G E (ABCDF with equal ""I don't care""-ness)"
"2017/03/01 6:27:52 PM EST","We say that all boards with player one must have the after board be squared and since the first board has player one by default the second board must be square which implies the first board can't be square.","basically create logic such that if for a player one move the first move is not squared make it square","G, E, H, F"
"2017/03/01 6:30:47 PM EST","The strategy requires Player One to use their move to make the board square, which is impossible if the board is already square. Since One moves first, the first board can't be square.","If the board is already square, One will have to settle for leaving the board as close to a square as possible, so they should remove either 1 row or 1 column.","H, G, E, F, C, D, B, A"
"2017/03/01 6:30:54 PM EST","Player one cannot remove any number of rows or columns from a square board and create a new board with square dimenions","In the the buggy predicate, I would include an if statement saying that move.before.rows != move.before.cols implies move.after.rows = move.after.cols and that move.before.rows = move.before.cols implies move.after.rows != move.after.cols","H  G C D E "
"2017/03/01 6:32:04 PM EST","Player One is constrained to go first so they must take a turn on the first board, which in this case must be square. However, the buggy version of the P1 strategy specifies that the board after P1's move must also be square. Since the list of legal moves only includes removing a positive number of columns or a positive number of rows, P1 will necessarily reduce one of the dimensions of that first, square board, rendering it rectangular. However, this rectangularity is forbidden by P1's strategy. Hence the unsatisfiability of the assert!","I would make ""move.after.rows = move.after.cols"" the consequent of a conditional with antecedent ""not move.before.rows = move.before.columns""","H, E, G, C/D, F, A, B"
"2017/03/01 6:33:13 PM EST","If the first board is square, then the moves specified for PlayerOneStrategy could never be satisfied, since the resultant board would always have an uneven number of rows and columns. ","I would make it so that instead of automatically assuming that it will always be possible to make a square board, it will instead just check to see if this is possible. (And if so, make that move. Otherwise just make any move). ","H, G, C/D, A/B/E/F"
"2017/03/01 6:34:57 PM EST","first board cannot be square because otherwise Player Two can do the same strategy against Player One and only give him/her constant square boards and never allowing him/her to make a move that results in a square board.","instead of saying all moves from One must result in a square board, i would change it to any move from One that is not a square board must result in a square board","H, G, F, A, B, C, D E"
"2017/03/01 6:36:03 PM EST","The StartingBoard fact contradicts playerOneStrategyBuggyAllowsSquareStart. We say in our pred that the board initially has equal rows and columns, but in our fact that Player One starts. Since Player One must a positive number of rows or columns (but not both), it cannot be that Player One can produce a square board from a square board.","You would want to add a special case for when Player One is given a square board. The truth is, Player Two has a winning strategy if the initial board is square, since P2 can maintain a square board the entire game and force P1 to lose. When Player One is given a square board, his dominant strategy is probably just to remove one row or one column and prolong his loss.","E G H C D F B A"
"2017/03/01 6:37:30 PM EST","Because the board being square (first.rows = first.cols in playerOneStrategyBuggyAllowsSquareStart) contradicts the fact that in PlayerOneStrategyBuggy we say for all moves player One makes, the columns and rows must be equivalent. Regardless of whether One picks the columns or rows, exactly one of them must change. We also say that One must be the first player.","I would change my definition of PlayerOneStrategyBuggy so that for all boards after making a square board is possible, One's move makes the boards square.","HGEFCD"
"2017/03/01 6:37:40 PM EST","We require rows and cols to be equal both before and after our move, which we don't allow","You'd only require the after to have equal rows and cols if they aren't currently equal.  Better would be however to do this manually instead of by saying what we expect to happend: ie remove x cols if too many cols or remove x rows if too many rows.","G,A,H,C"
"2017/03/01 6:38:51 PM EST","We defined moves (player picking a row or column) as before.rows > choicen or before.cols < choicen, basically saying that the number must be more before the move implying that they can never be equal, e.g. there is never a square board (equal # of rows and cols) ","i would track previous move and say adding that back the rows + cols should be equal so a square board could exist","C, D, G"
"2017/03/01 6:39:22 PM EST","We've defined a move as the board state having more columns or rows prior to a move happening so for the initial board the board can't be equal or the first move is invalid in our definition.","I would change it to say greater than or equal to instead of greater than","C,D,"
"2017/03/01 6:43:33 PM EST","The board cannot be square because then it would be possible for Player 2 to win, even with Player One's using their own strategy. For example, after Player 1 moves, the board will not be square, and it will be Player 2's turn, who can use the same strategy of making the board square every time, thus making Player 1 lose.","Having a not square board in previous imply that there is a square board in next for player 1, as opposed to what we have now, which is that all of the boards after player 1 will have a square board.","G, H, C/D"
"2017/03/01 6:45:31 PM EST","If player 1 encounters a board that is square (like if the first is square) then they cannot make that board into a square in their move.","I would have a case in player 1's strategy that gives an alternate strategy for when the board they encounter is square.","F, H, E, B, C, D, A, G"
"2017/03/01 6:47:00 PM EST","Because in the predicate, we assert that after player 1 moves, the number of rows has to equal the number of columns. Since player 1 goes first, if he is given a square board to begin with, there is no move he can perform that will produce a square board for player 2.","Take the difference between move.after.rows and move.after.cols and make sure that the difference is between -1 and 1.","G, H, E, C, D, A, B, F"
"2017/03/01 6:47:40 PM EST","PlayerOneStrategyBuggy forces rows=cols after player one's move, which isn't possible if the first board is a square","I would add a statement to make PlayerOneStrategyBuggy only be true when the rows and cols before player one's turn aren't equal.","G, H, E, C/D, A, B, F"
"2017/03/01 6:47:46 PM EST","Because One must be the first player, and if they start with a square board, they cannot play a move that ends with a square board, which contradicts the PlayerOneStrategyBuggy predicate","I would add a special case for if move.before is square","I didn't use the right alloy version, so I didn't have access to the unsat core"
"2017/03/01 6:51:42 PM EST","Since Player One has to go first, and the chocolate/soap bar created by the first move has to be square, there is no way for the initial board itself to be square. This is because the choice of Row or Column modification requires some row or column to be chopped off, which would result in the rectangularization of the bar.","If you let Player 2 go first, then square boards are possible, because the first move is not constrained by the PlayerOneStrategy predicate. 

You could also allow the first board to be the last board, so no illegal move is necessary. ","E, G, A, C, D"
"2017/03/01 6:55:43 PM EST","Because the playerOneStrategyBuggy pred causes a conflict: you have to remove one row or col, but then it's impossible for after.rows to equal after.cols","I would add change it to ""move.before.cols != move.before.rows implies move.after.cols = move.after.rows""","G H C D A F E B"
"2017/03/01 6:58:33 PM EST","","",""
"2017/03/01 6:59:52 PM EST","","If the before board isn't square, make the after square","G, H, C & D, equal"
"2017/03/01 8:15:04 PM EST","I don't know. I'd speculate it might have to do with the edge case at the end of play, since that's normally how these things play out, but the highlighting is basically only telling me that the starting conditions, strategy, and rules conflict. This doesn't tell my anything beyond that the strategy doesn't work, but I know that when it couldn't find an example.","I would make it apply only to playable boards.",""
"2017/03/02 8:14:34 PM EST","Because this wouldn't result in square board after a move as required by PlayerOneStrategyBuggy","  all m: Move | ((m.before.player = One and m.before.rows > m.before.cols) implies (m.choiced = Row and m.choicen = m.before.cols)) and
	((m.before.player = One and m.before.rows < m.before.cols) implies (m.choiced = Col and m.choicen = m.before.rows))","G, H, E, C, D, A, B"
"2017/03/03 7:21:41 PM EST","PlayerOneStrategyBuggy requires that the second board be square, but it's impossible for 2 boards in a row to be square.","Add ""move.before.rows != move.before.cols implies "" before ""move.after.rows = move.after.cols"", which says Player One does the strategy *whenever possible*. I can't think of a way to enfore that more directly/exactly without CTL.","G, H, E, (C and D)"